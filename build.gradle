plugins {
	id "fabric-loom" version "1.5-SNAPSHOT"
	id "maven-publish"
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	mods {
		"modviewer" {
			sourceSet("main")
		}
	}
}

repositories {
	maven {
		name = "Nucleoid"
		url = "https://maven.nucleoid.xyz/"
	}
	maven {
		name = "Sonatype"
		url = "https://oss.sonatype.org/content/repositories/snapshots/"
	}
}

dependencies {
	// Main
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Fabric API
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	// SGUI
	modImplementation include("eu.pb4:sgui:${project.sgui_version}")

	// Server Translations API
	modImplementation include("xyz.nucleoid:server-translations-api:${project.server_translations_api_version}")

	// Permissions API
	modImplementation include("me.lucko:fabric-permissions-api:${project.permissions_api_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}